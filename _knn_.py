# -*- coding: utf-8 -*-
"""Aryan Mehndiratta_KNN.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qE7mP1n5-K6o0Bz9J5q6zEcoF3EhO-un
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

dataset = pd.read_csv('Social_Network.csv')
X = dataset.iloc[:, :-1].values
y = dataset.iloc[:, -1].values

dataset.head()

from sklearn.model_selection import train_test_split
X_train, X_test,y_train, y_test = train_test_split(X,y, test_size = 0.25, random_state = 0)

print(X_train)

print(y_train)

from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
X_train = sc.fit_transform(X_train)
X_test = sc.transform(X_test)

print(X_train)

from sklearn.neighbors import KNeighborsClassifier
knn = KNeighborsClassifier(n_neighbors=11)
knn.fit(X_train, y_train)

print(knn.predict(X_test))

print(knn.score(X_test, y_test))

neighbors = np.arange(1, 9)
train_accuracy = np.empty(len(neighbors))
test_accuracy = np.empty(len(neighbors))

for i, k in enumerate(neighbors):
    knn = KNeighborsClassifier(n_neighbors=k)
    knn.fit(X_train, y_train)
    print(i)

    train_accuracy[i] = knn.score(X_train, y_train)
    test_accuracy[i] = knn.score(X_test, y_test)

print(train_accuracy)

print(test_accuracy)

plt.plot(neighbors, test_accuracy, label = 'Testing dataset Accuracy')
plt.plot(neighbors, train_accuracy, label = 'Training dataset Accuracy')

plt.xlabel('n_neighbors')
plt.ylabel('Accuracy')
plt.show()

#Confusion matrix
from sklearn.metrics import confusion_matrix
y_pred = knn.predict(X_test)
conf_matrix = confusion_matrix(y_test, y_pred)

print("Confusion Matrix:")
print(conf_matrix)

#cross validation
from sklearn.model_selection import cross_val_score

scores = cross_val_score(knn, X, y, cv=7, scoring='accuracy')

print("Cross-validation scores:", scores)
print("Average Accuracy:", scores.mean())

